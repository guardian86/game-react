{"ast":null,"code":"var _jsxFileName = \"/home/andres/Documentos/Projects Visual Code/IONIC PROJECTS/Game-React/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonInput } from \"@ionic/react\";\nimport \"./Home.css\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNOS = [\"+\", \"-\", \"*\", \"/\"];\n\nconst Home = () => {\n  _s();\n\n  const [primerNumero, setPrimerNumero] = useState(0);\n  const [segundoNumero, setSegundoNumero] = useState(0);\n  const [signo, setSigno] = useState(\"+\");\n  const [resultado, setResultado] = useState(\"\");\n  const [calificacion, setCalificacion] = useState(null);\n  useEffect(() => {\n    nuevaOperacion();\n  }, []);\n\n  const nuevaOperacion = () => {\n    setPrimerNumero(Math.floor(generarNumeroAleatorio() * (10000 - 0 + 1 + 0)));\n    setSegundoNumero(Math.floor(generarNumeroAleatorio() * (10000 - 0 + 1 + 0)));\n    const position = Math.floor(generarNumeroAleatorio() * (3 - 0 + 1 + 0));\n    setSigno(SIGNOS[position]);\n    setCalificacion(null);\n    setResultado(\"\");\n  };\n\n  const generarNumeroAleatorio = () => {\n    return Math.random();\n  };\n\n  const validarResultado = () => {\n    const respuesta = eval(primerNumero + signo + segundoNumero);\n    setCalificacion(respuesta == resultado);\n  };\n\n  return useMemo(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container center-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-number center-flex\",\n      children: primerNumero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-operator center-flex\",\n      children: signo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-number center-flex\",\n      children: segundoNumero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-form\",\n      children: [/*#__PURE__*/_jsxDEV(IonInput, {\n        className: \"game-form-input\",\n        type: \"number\",\n        value: resultado,\n        onIonChange: e => setResultado(e.detail.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-form-button\",\n        onClick: validarResultado,\n        children: \"Validar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), calificacion && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Correcto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this), calificacion === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Incorrecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-form-button\",\n        onClick: nuevaOperacion,\n        children: \"Generar nueva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), [primerNumero, signo, segundoNumero, calificacion, resultado]);\n};\n\n_s(Home, \"E2l1rE+B866s3wSukpHUK9qnsxM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/andres/Documentos/Projects Visual Code/IONIC PROJECTS/Game-React/src/pages/Home.tsx"],"names":["IonInput","useState","useEffect","useMemo","SIGNOS","Home","primerNumero","setPrimerNumero","segundoNumero","setSegundoNumero","signo","setSigno","resultado","setResultado","calificacion","setCalificacion","nuevaOperacion","Math","floor","generarNumeroAleatorio","position","random","validarResultado","respuesta","eval","e","detail","value"],"mappings":"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","sourcesContent":["import { IonInput } from \"@ionic/react\";\nimport \"./Home.css\";\nimport { useState, useEffect, useMemo } from \"react\";\n\nconst SIGNOS = [\"+\", \"-\", \"*\", \"/\"];\n\nconst Home: React.FC = () => {\n  const [primerNumero, setPrimerNumero] = useState(0);\n  const [segundoNumero, setSegundoNumero] = useState(0);\n  const [signo, setSigno] = useState(\"+\");\n  const [resultado, setResultado] = useState<string>(\"\");\n  const [calificacion, setCalificacion] = useState<boolean | null>(null);\n  useEffect(() => {\n    nuevaOperacion();\n  }, []);\n\n  const nuevaOperacion = () => {\n    setPrimerNumero(Math.floor(generarNumeroAleatorio() * (10000 - 0 + 1 + 0)));\n    setSegundoNumero(\n      Math.floor(generarNumeroAleatorio() * (10000 - 0 + 1 + 0))\n    );\n    const position = Math.floor(generarNumeroAleatorio() * (3 - 0 + 1 + 0));\n    setSigno(SIGNOS[position]);\n    setCalificacion(null);\n    setResultado(\"\");\n  };\n\n  const generarNumeroAleatorio = () => {\n    return Math.random();\n  };\n\n  const validarResultado = () => {\n    const respuesta = eval(primerNumero + signo + segundoNumero);\n    setCalificacion(respuesta == resultado);\n  };\n\n  return useMemo(() => (\n    <div className=\"game-container center-flex\">\n      <div className=\"game-number center-flex\">{primerNumero}</div>\n      <div className=\"game-operator center-flex\">{signo}</div>\n      <div className=\"game-number center-flex\">{segundoNumero}</div>\n      <div className=\"game-form\">\n        <IonInput\n          className=\"game-form-input\"\n          type=\"number\"\n          value={resultado}\n          onIonChange={(e) => setResultado(e.detail.value!)}\n        ></IonInput>\n        <button className=\"game-form-button\" onClick={validarResultado}>\n          Validar\n        </button>\n        {calificacion && <div>Correcto</div>}\n        {calificacion === false && <div>Incorrecto</div>}\n        <button className=\"game-form-button\" onClick={nuevaOperacion}>\n          Generar nueva\n        </button>\n      </div>\n    </div>\n  ), [primerNumero, signo, segundoNumero, calificacion, resultado]);\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}